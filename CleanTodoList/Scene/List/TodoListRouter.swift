//
//  TodoListRouter.swift
//  CleanTodoList
//
//  Created by 장용범 on 2021/01/21.
//  Copyright (c) 2021 장용범. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol TodoListRoutingLogic
{
  func routeToDetail(segue: UIStoryboardSegue?)
}

protocol TodoListDataPassing
{
  var dataStore: TodoListDataStore? { get }
}

class TodoListRouter: NSObject, TodoListRoutingLogic, TodoListDataPassing
{
  weak var viewController: TodoListViewController?
  var dataStore: TodoListDataStore?
  
  // MARK: Routing
  
  func routeToDetail(segue: UIStoryboardSegue?)
  {
    if let segue = segue {
      let destinationVC = segue.destination as! DetailViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToDetail(source: dataStore!, destination: &destinationDS)
    } else {
      let storyboard = UIStoryboard(name: "Main", bundle: nil)
      let destinationVC = storyboard.instantiateViewController(withIdentifier: "DetailViewController") as! DetailViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToDetail(source: dataStore!, destination: &destinationDS)
      navigateToDetail(source: viewController!, destination: destinationVC)
    }
  }

  // MARK: Navigation
  
  func navigateToDetail(source: TodoListViewController, destination: DetailViewController)
  {
    source.navigationController?.pushViewController(destination, animated: true)
  }
  
  // MARK: Passing data
  
  func passDataToDetail(source: TodoListDataStore, destination: inout DetailDataStore)
  {
    guard let selectedIndex = source.selectedIndex else { return }
    print("selectedIndex: \(selectedIndex)")
    destination.index = selectedIndex
  }
    
}
